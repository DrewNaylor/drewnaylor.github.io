This page is a work in progress and will become its own blog post for easier reference. A lot of this information is thanks to Jonathan Pho's work, as linked in this comment thread: https://www.youtube.com/watch?v=0p5foo1INhk&lc=Ugxf35EMKFcHMBobHv94AaABAg

I'd also like to acknowledge NTDEV's efforts in getting X11 to work on CBL-Mariner.

<B>Note:</B> Jonathan Pho mostly used Linux From Scratch, but didn't use their "./configure" flags.
<B>Note 2:</B> I can't seem to figure out how to get the required drivers installed, and I don't know if I'm doing things correctly.
Update: Even though mesa was in the repos, I think I need to manually compile it to get the correct drivers:
https://docs.mesa3d.org/drivers/svga3d.html

Turns out that some of the scripts for/from `./configure` and `autogen.sh` have to be modified as they try to put files into `/usr/local/lib` and `/usr/local/bin` instead of `/usr/lib` and `/usr/bin`, which prevents the build from working. Piping the `./configure` output to a file will show which flags need to be modified. The LFS ones cause issues.
Additionally, there are instructions for building X11/Xorg here: https://www.x.org/wiki/Building_the_X_Window_System/ 
And drivers from here: https://www.x.org/releases/X11R7.6/src/everything/
Note that X11 7.7 is available, but I won't be using it because it apparently doesn't work with the install script.
I'll be using Hyper-V instead of VMWare.

After installing Xorg Server from coreui repo as shown in part 2:

0. Install development packages so that we can build the X11 drivers
  A. "xorg-x11-server-devel" (https://bbs.archlinux.org/viewtopic.php?id=121647)
  B. "libXext-devel"
1. Install graphics drivers/packages
  A. "mesa"
    I. It appears that "mesa-dri-drivers" is the package to install.
    II. Or maybe not, as it didn't seem to install what I needed, so I may need to compile mesa myself. See the update near the top of the page.
  B. "drm"
    I. There are some DRM packages mentioned in the coreui repo, so some might work. Not sure which ones, so I'll have to figure that out.
  C. Hyper-V: "xf86-video-fbdev" according to the Arch Wiki: https://wiki.archlinux.org/title/Hyper-V#Xorg (LFS instructions: https://www.linuxfromscratch.org/blfs/view/svn/x/x7driver.html#xorg-fbdev-driver)
    I. Download the "xf86-video-fbdev" package by running <code>wget https://www.x.org/pub/individual/driver/xf86-video-fbdev-0.5.0.tar.bz2</code>
	II. Extract it by running <code>tar -xvjf xf86-video-fbdev-0.5.0.tar.bz2</code>
	III. CD into "xf86-video-fbdev-0.5.0"
	IV. Compile it by running <code>./configure</code>, then <code>make</code>
	V. Install it by running <code>sudo make install</code>
	VI. Run <code>sudo dnf install xorg-x11-server-Xvfb</code> to get the virtual framebuffer X server installed.
	VII. There should be a way to make it work, but I can't figure out how to run it.
  D. VMware Workstation: "xf86-video-vmware"/"vmwgfx" since we're using VMware, though the instructions should work for other X11 drivers; might end up giving up on installing this in VMware and just use Hyper-V, because this is really complicated and MESA-LOADER still can't find the correct driver. (https://www.linuxfromscratch.org/blfs/view/svn/x/x7driver.html#xorg-vmware-driver)
    I. Make a new folder to keep everything in its own area: <code>mkdir x11-installing</code> (or whatever you want the folder to be; "x11-installing" is just an example)
    II. CD into the folder you made.
    III. Download the package by running <code>wget https://www.x.org/pub/individual/driver/xf86-video-vmware-13.3.0.tar.bz2</code>
    IV. Extract the package by running <code>tar -xvjf xf86-video-vmware-13.3.0.tar.bz2</code>
    V. CD into "xf86-video-vmware-13.3.0"
    VI. Compile it by running <code>./configure</code>, then <code>make</code>
    VII. Install it by running <code>sudo make install</code>
	VIII. Run <code>sudo depmod -a</code> (this and the next few instructions are from https://mesa-docs.readthedocs.io/en/latest/vmware-guest.html)
	IX. Run <code>sudo dracut --force</code> to update the initramfs
	X. Add vmwgfx to the /etc/modules file by running <code>echo vmwgfx | sudo tee -a /etc/modules</code>
	XI. Try to load the kernel module by running <code>sudo modprobe vmwgfx</code>
	XII. Type <code>sudo dmesg</code> to watch the dmesg output to see if there are any lines prefixed with [vmwgfx], which there should be. You may need to pipe it into grep and filter for "vmwgfx".
  - DRM and Mesa might auto-install alongside Xorg Server
  - Not sure about the exact package names
3. Install VMware/X11 mouse drivers so the mouse works in X11.
4. Install "twm" (https://www.linuxfromscratch.org/blfs/view/systemd/x/twm.html)
  A. Download this package by running <code>wget https://www.x.org/pub/individual/app/twm-1.0.11.tar.xz</code>.
  B. Extract it with <code>tar -xf twm-1.0.11.tar.xz</code>.
  C. CD into "twm-1.0.11".
  D. Install it by running <code>sed -i -e '/^rcdir =/s,^\(rcdir = \).*,\1/etc/X11/app-defaults,' src/Makefile.in</code>, <code>./configure</code>, <code>make</code>, <code>sudo make install</code>.
  Note: When trying to do "./configure", it says that it can't find four packages: "xt", "xmu", "ice", and "sm". LFS didn't mention those, so I'm not sure what to do. I barely know how to install software from source, so this is way more complicated than what I can do.
5. Install "xterm" (https://www.linuxfromscratch.org/blfs/view/systemd/x/xterm.html)
  A. Download this package: https://invisible-mirror.net/archives/xterm/xterm-368.tgz
  B. Compile it
  C. Install it
  D. You also need a monospace TTF or OTF font to run xterm, such as Dejavu fonts: https://www.linuxfromscratch.org/blfs/view/systemd/x/TTF-and-OTF-fonts.html#dejavu-fonts
  <b>Note:</b> "dejavu-sans-mono-fonts" is a package that exists in the "coreui" CBL-Mariner repo.
6. Install "Xinit" (https://www.linuxfromscratch.org/blfs/view/systemd/x/xinit.html)
  A. Download this package: https://www.x.org/pub/individual/app/xinit-1.4.1.tar.bz2
  B. Compile it
  C. Install it
  
After installing "Xinit", "startx" should now be installed, so you can use it to run X11.




Scratch area:

- Instructions for compiling X11 say to install "libgbm", but I didn't find it under that exact name. Rather, it was "mesa-libgbm". There's also "mesa-libgbm-devel", but I don't know if I need that one or not. Note that this package is in the "coreui" repo.
- "autopoint" links to a page on "gettext". Not sure if they're the same thing, but "gettext" is mentioned in a different section.
- "libmtdev" is listed as a package that needs to be installed, but "mtdev" appears to be the name. Didn't notice it was actually listed on the linked page until after doing a search for "mt" with dnf. This package requires the "coreui" repo.
- "libudev" appeared to be already installed, though it took a while to confirm it even though I assumed it was installed (the presence of "/lib/@libudev.so" and other similar filenames should confirm it's installed).
- You'll have to install one of the following cryptographic libraries, according to the build guide.
  - "libcrypto" should already be installed based on the presence of "/lib/@libcrypto.so" and other similar filenames.
  - "libsha1" doesn't appear to be in the repos, so it needs to be built from here: https://github.com/dottedmag/libsha1 To build the package, you need to run "./autogen.sh", "./configure", "make", then "sudo make install". The instructions don't mention the autogen.
  - "libmd" appears to need to be compiled as I didn't find it in the repo: https://www.hadrons.org/software/libmd/ You'll have to run "./autogen", "./configure", "make all" (saw "make all" mentioned in one of the mirrors, so I figured it would be a good idea to use it), then "sudo make install".
  - I couldn't seem to find "CommonCrypto" or figure out how to install it. There is code on Apple's website, but I don't know what to download.
- "fontconfig" installs "freetype".
- Building X11 says it fails on "libxcvt", so it needs to be installed from source: https://gitlab.freedesktop.org/xorg/lib/libxcvt You'll need to install "meson" and "ninja-build" if they're not already installed, then run "meson build/" (or "meson build/ --prefix=..", but the instructions had "... --prefix=..." with the ellipsis and it failed), then "sudo ninja -C build/ install". For some reason, running "cvt" says "cvt: error while loading shared libraries: libxcvt.so.0: cannot open shared object file: No such file or directory".
- I can't seem to get any further with the build.sh script, so I think I'll try building from the archive files.